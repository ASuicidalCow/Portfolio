{"version":3,"sources":["assets/images/pat.png","assets/images/foodTruck.png","assets/images/Untitled.png","components/Navbar/index.js","components/Carousel/index.js","components/Footer/index.js","components/AboutMe/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","BootstrapCarousel","Carousel","Item","src","pat","alt","foodTruck","rockfish","React","Footer","Container","Row","Col","AboutMe","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,2MCgD5BC,G,6KAvCX,OACE,yBAAKC,UAAU,+CACb,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,qBAGA,4BACED,UAAU,sCACVE,KAAK,SACLC,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBACX,0BAAMP,UAAU,yBAElB,yBAAKA,UAAU,uCAAuCQ,GAAG,aACvD,wBAAIR,UAAU,uBACZ,wBAAIA,UAAU,+BACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,QACO,0BAAMD,UAAU,WAAhB,eAGT,wBAAIA,UAAU,aACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,cAIF,wBAAID,UAAU,YACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,sB,GA/BOQ,c,2DCmCNC,G,MAnCf,uKAEI,OACE,yBAAKV,UAAU,mBACb,8BAGA,kBAACW,EAAA,EAAD,CAAUX,UAAU,aAAaQ,GAAG,YAClC,kBAACG,EAAA,EAASC,KAAV,KACE,yBACEZ,UAAU,qBACVa,IAAKC,IACLC,IAAI,oBAGR,kBAACJ,EAAA,EAASC,KAAV,KACE,yBACEZ,UAAU,qBACVa,IAAKG,IACLD,IAAI,gBAGR,kBAACJ,EAAA,EAASC,KAAV,KACE,yBACEZ,UAAU,cACVa,IAAKI,IACLF,IAAI,uBA1BlB,GAAuCG,IAAMT,Y,gCCY9BU,EAdf,uKAEI,OACE,4BAAQnB,UAAU,UAChB,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKtB,UAAU,eAAf,gCANZ,GAA4BkB,IAAMT,WCYnBc,EAdf,uKAGI,OACE,iCACE,yBAAKvB,UAAU,aACb,wBAAIA,UAAU,yCAAd,YACA,wBAAIA,UAAU,QAAd,0rBAPV,GAA6BkB,IAAMT,WCiBpBe,E,uKAXX,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAPWf,aCMCgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d022857c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pat.20dadde1.png\";","module.exports = __webpack_public_path__ + \"static/media/foodTruck.3b147600.png\";","module.exports = __webpack_public_path__ + \"static/media/Untitled.6b868382.png\";","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react';\r\nimport './style.css';\r\n\r\n\r\n\r\nclass Navbar extends Component{\r\n\r\n  render(){\r\n    return (\r\n      <nav className='navbar navbar-expand-lg bg-dark text-light '>\r\n        <a className='navbar-brand' href='/'>\r\n          Aaron.B Portfolio\r\n        </a>\r\n        <button\r\n          className='navbar-toggler bg-light float-right'\r\n          type='button'\r\n          data-toggle='collapse'\r\n          data-target='#navbarNav'\r\n          aria-controls='navbarNav'\r\n          aria-expanded='false'\r\n          aria-label='Toggle navigation'>\r\n          <span className='navbar-toggler-icon'></span>\r\n        </button>\r\n        <div className='collapse navbar-collapse float-right' id='navbarNav'>\r\n          <ul className='navbar-nav col-md-5'>\r\n            <li className='nav-item active float-right'>\r\n              <a className='nav-link' href='/'>\r\n                Home <span className='sr-only'>(current)</span>\r\n              </a>\r\n            </li>\r\n            <li className='nav-item '>\r\n              <a className='nav-link' href='#'>\r\n                Portfolio \r\n              </a>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <a className='nav-link' href='#'>\r\n                Contact Me\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport pat from '../../assets/images/pat.png';\r\nimport foodTruck from '../../assets/images/foodTruck.png';\r\nimport rockfish from '../../assets/images/Untitled.png';\r\nimport './style.css';\r\nexport class BootstrapCarousel extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='container mt-5 '>\r\n        <div >\r\n          \r\n        </div>\r\n        <Carousel className='w-100 h-10' id='carousel'>\r\n          <Carousel.Item>\r\n            <img\r\n              className='d-block w-100 h-10'\r\n              src={pat}\r\n              alt='Pat Knows best'\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className='d-block w-100 h-10'\r\n              src={foodTruck}\r\n              alt='Food truck'\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=' w-100 h-10'\r\n              src={rockfish}\r\n              alt='Third slide'\r\n            />\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BootstrapCarousel;\r\n","import React from 'react';\r\nimport './style.css';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nexport class Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className='footer'>\r\n        <Container>\r\n          <Row>\r\n            <Col className='text-center'>Aaron Bertagnole 2020</Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\n\r\nexport class AboutMe extends React.Component{\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <div className='container'>\r\n          <h1 className='container-fluid mb-5 mt-5 text-center'>About ME</h1>\r\n          <h2 className='mt-4'> I grew up in little Casper, Wyoming where I lived for 17 years before moving to my current home state of Utah with my parents. I then started what I thought was going to be my career for life at FedEx. I had realized that this was not the career I wanted. I searched and went to different colleges to find something that fit me and nothing quite stuck until I found computer programming where I discovered a love of problem solving and creating things that others might possible find useful or that I find useful for my self. Although, I am less experienced my thirst for knowledge has helped me through a brutal 24 week coding bootcamp through the University of Utah with high marks.   </h2>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;","import React, { Component } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Carousel from './components/Carousel'\r\nimport Footer from './components/Footer';\r\nimport AboutMe from './components/AboutMe';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar></Navbar>\r\n        <Carousel></Carousel>\r\n        <AboutMe></AboutMe>\r\n        <Footer></Footer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}